-- ================================================================
-- üßπ SCRIPT DE LIMPEZA DO BANCO DE DADOS - SISTEMA H√çBRIDO
-- ================================================================
-- 
-- Este script remove tabelas obsoletas ap√≥s migra√ß√£o para sistema h√≠brido
-- EXECUTE APENAS AP√ìS BACKUP COMPLETO DO BANCO DE DADOS
--
-- Data: 2025-01-15
-- Vers√£o: 1.0
-- 
-- ATEN√á√ÉO: 
-- ‚ö†Ô∏è  FA√áA BACKUP COMPLETO ANTES DE EXECUTAR
-- ‚ö†Ô∏è  TESTE EM AMBIENTE DE DESENVOLVIMENTO PRIMEIRO
-- ‚ö†Ô∏è  EXECUTE EM HOR√ÅRIO DE BAIXO TR√ÅFEGO
-- 
-- ================================================================

-- ================================================================
-- FASE 1: BACKUP DE SEGURAN√áA (OPCIONAL - DESCOMENTE SE PRECISAR)
-- ================================================================

-- Descomente as linhas abaixo se quiser fazer backup das tabelas antes de remover:

-- CREATE TABLE backup_client_profiles AS SELECT * FROM client_profiles;
-- CREATE TABLE backup_trainer_profiles AS SELECT * FROM trainer_profiles;
-- CREATE TABLE backup_programs AS SELECT * FROM programs;
-- CREATE TABLE backup_client_profile AS SELECT * FROM client_profile;
-- CREATE TABLE backup_client_fitness_goals AS SELECT * FROM client_fitness_goals;
-- CREATE TABLE backup_client_sport_interests AS SELECT * FROM client_sport_interests;
-- CREATE TABLE backup_trainer_specialties AS SELECT * FROM trainer_specialties;
-- CREATE TABLE backup_trainer_service_cities AS SELECT * FROM trainer_service_cities;
-- CREATE TABLE backup_trainer_certifications AS SELECT * FROM trainer_certifications;
-- CREATE TABLE backup_program_sports AS SELECT * FROM program_sports;
-- CREATE TABLE backup_program_modules AS SELECT * FROM program_modules;
-- CREATE TABLE backup_program_contents AS SELECT * FROM program_contents;

-- ================================================================
-- FASE 2: VERIFICA√á√ÉO DE SISTEMA H√çBRIDO ATIVO
-- ================================================================

-- Verificar se as tabelas h√≠bridas existem e t√™m dados
DO $$
DECLARE
    hybrid_count INTEGER;
BEGIN
    -- Verificar se sistema h√≠brido est√° ativo
    SELECT COUNT(*) INTO hybrid_count 
    FROM information_schema.tables 
    WHERE table_name IN ('99_client_profile', '99_trainer_profile', '99_training_programs');
    
    IF hybrid_count < 3 THEN
        RAISE EXCEPTION 'ERRO: Sistema h√≠brido n√£o est√° completo. Verificar antes de prosseguir.';
    END IF;
    
    RAISE NOTICE '‚úÖ Sistema h√≠brido verificado - % tabelas encontradas', hybrid_count;
END $$;

-- ================================================================
-- FASE 3: REMOVER VIEWS PRIMEIRO (SEM DEPEND√äNCIAS)
-- ================================================================

RAISE NOTICE 'üóëÔ∏è  FASE 3: Removendo views obsoletas...';

-- Views de cache e dashboard obsoletas
DROP VIEW IF EXISTS v_trainer_card CASCADE;
DROP VIEW IF EXISTS public_training_programs CASCADE;
DROP VIEW IF EXISTS published_training_programs CASCADE;
DROP VIEW IF EXISTS trainer_programs_dashboard CASCADE;

RAISE NOTICE '‚úÖ Views removidas com sucesso';

-- ================================================================
-- FASE 4: REMOVER TABELAS DE RELACIONAMENTO OBSOLETAS
-- ================================================================

RAISE NOTICE 'üóëÔ∏è  FASE 4: Removendo tabelas de relacionamento obsoletas...';

-- Tabelas que foram migradas para JSONB nos perfis h√≠bridos
DROP TABLE IF EXISTS client_fitness_goals CASCADE;
DROP TABLE IF EXISTS client_sport_interests CASCADE;
DROP TABLE IF EXISTS trainer_specialties CASCADE;
DROP TABLE IF EXISTS trainer_service_cities CASCADE;
DROP TABLE IF EXISTS trainer_certifications CASCADE;
DROP TABLE IF EXISTS program_sports CASCADE;

RAISE NOTICE '‚úÖ Tabelas de relacionamento removidas';

-- ================================================================
-- FASE 5: REMOVER ESTRUTURA DE PROGRAMAS ANTIGA
-- ================================================================

RAISE NOTICE 'üóëÔ∏è  FASE 5: Removendo estrutura de programas antiga...';

-- Estrutura de conte√∫do que agora est√° em JSONB
DROP TABLE IF EXISTS program_contents CASCADE;
DROP TABLE IF EXISTS program_modules CASCADE;

RAISE NOTICE '‚úÖ Estrutura de programas antiga removida';

-- ================================================================
-- FASE 6: REMOVER TABELAS DE PERFIL ANTIGAS
-- ================================================================

RAISE NOTICE 'üóëÔ∏è  FASE 6: Removendo tabelas de perfil antigas...';

-- Perfis antigos substitu√≠dos pelo sistema h√≠brido
DROP TABLE IF EXISTS client_profile CASCADE;
DROP TABLE IF EXISTS client_profiles CASCADE;
DROP TABLE IF EXISTS trainer_profiles CASCADE;
DROP TABLE IF EXISTS programs CASCADE;

RAISE NOTICE '‚úÖ Tabelas de perfil antigas removidas';

-- ================================================================
-- FASE 7: LIMPAR KV STORES ANTIGOS
-- ================================================================

RAISE NOTICE 'üóëÔ∏è  FASE 7: Limpando KV stores antigos...';

-- Manter apenas o KV store atual (kv_store_e547215c)
DROP TABLE IF EXISTS kv_store CASCADE;
DROP TABLE IF EXISTS kv_store_9d95a325 CASCADE;

-- Verificar se o KV store atual existe
DO $$
BEGIN
    IF NOT EXISTS (SELECT 1 FROM information_schema.tables WHERE table_name = 'kv_store_e547215c') THEN
        RAISE WARNING '‚ö†Ô∏è  KV store atual (kv_store_e547215c) n√£o encontrado!';
    ELSE
        RAISE NOTICE '‚úÖ KV store atual preservado';
    END IF;
END $$;

-- ================================================================
-- FASE 8: VERIFICAR INTEGRIDADE P√ìS-LIMPEZA
-- ================================================================

RAISE NOTICE 'üîç FASE 8: Verificando integridade p√≥s-limpeza...';

-- Verificar se tabelas essenciais ainda existem
DO $$
DECLARE
    essential_tables TEXT[] := ARRAY[
        '99_client_profile',
        '99_trainer_profile', 
        '99_training_programs',
        'users',
        'cities',
        'states',
        'sports',
        'conversations',
        'messages',
        'notifications',
        'transactions',
        'program_enrollments',
        'media_files',
        'kv_store_e547215c'
    ];
    missing_tables TEXT[] := ARRAY[]::TEXT[];
    tbl TEXT;
BEGIN
    -- Verificar cada tabela essencial
    FOREACH tbl IN ARRAY essential_tables
    LOOP
        IF NOT EXISTS (SELECT 1 FROM information_schema.tables WHERE table_name = tbl) THEN
            missing_tables := array_append(missing_tables, tbl);
        END IF;
    END LOOP;
    
    IF array_length(missing_tables, 1) > 0 THEN
        RAISE WARNING '‚ö†Ô∏è  Tabelas essenciais n√£o encontradas: %', array_to_string(missing_tables, ', ');
    ELSE
        RAISE NOTICE '‚úÖ Todas as tabelas essenciais preservadas';
    END IF;
END $$;

-- ================================================================
-- FASE 9: OTIMIZA√á√ÉO FINAL
-- ================================================================

RAISE NOTICE '‚ö° FASE 9: Otimizando banco p√≥s-limpeza...';

-- Recriar √≠ndices otimizados para tabelas h√≠bridas
DROP INDEX IF EXISTS idx_99_client_profile_user_id;
DROP INDEX IF EXISTS idx_99_client_profile_jsonb;
DROP INDEX IF EXISTS idx_99_trainer_profile_user_id;
DROP INDEX IF EXISTS idx_99_trainer_profile_jsonb;
DROP INDEX IF EXISTS idx_99_training_programs_trainer_id;
DROP INDEX IF EXISTS idx_99_training_programs_jsonb;

-- Criar √≠ndices otimizados
CREATE INDEX IF NOT EXISTS idx_99_client_profile_user_id ON "99_client_profile"(user_id);
CREATE INDEX IF NOT EXISTS idx_99_client_profile_jsonb ON "99_client_profile" USING gin(profile_data);
CREATE INDEX IF NOT EXISTS idx_99_trainer_profile_user_id ON "99_trainer_profile"(user_id);
CREATE INDEX IF NOT EXISTS idx_99_trainer_profile_jsonb ON "99_trainer_profile" USING gin(profile_data);
CREATE INDEX IF NOT EXISTS idx_99_training_programs_trainer_id ON "99_training_programs"(trainer_id);
CREATE INDEX IF NOT EXISTS idx_99_training_programs_jsonb ON "99_training_programs" USING gin(program_data);

-- Vacuum para liberar espa√ßo
VACUUM ANALYZE;

RAISE NOTICE '‚úÖ Otimiza√ß√£o conclu√≠da';

-- ================================================================
-- FASE 10: RELAT√ìRIO FINAL
-- ================================================================

RAISE NOTICE 'üìä FASE 10: Gerando relat√≥rio final...';

-- Contar tabelas restantes
DO $$
DECLARE
    total_tables INTEGER;
    hybrid_tables INTEGER;
    essential_tables INTEGER;
BEGIN
    -- Total de tabelas
    SELECT COUNT(*) INTO total_tables 
    FROM information_schema.tables 
    WHERE table_schema = 'public';
    
    -- Tabelas h√≠bridas
    SELECT COUNT(*) INTO hybrid_tables 
    FROM information_schema.tables 
    WHERE table_name LIKE '99_%';
    
    -- Tabelas essenciais (estimativa)
    SELECT COUNT(*) INTO essential_tables 
    FROM information_schema.tables 
    WHERE table_name IN (
        'users', 'cities', 'states', 'sports', 
        'conversations', 'messages', 'notifications',
        'transactions', 'program_enrollments', 'media_files'
    );
    
    RAISE NOTICE 'üìä RELAT√ìRIO FINAL DA LIMPEZA:';
    RAISE NOTICE '   üóÉÔ∏è  Total de tabelas restantes: %', total_tables;
    RAISE NOTICE '   üîÑ Tabelas h√≠bridas: %', hybrid_tables;
    RAISE NOTICE '   ‚öôÔ∏è  Tabelas essenciais: %', essential_tables;
    RAISE NOTICE '   ‚úÖ Limpeza conclu√≠da com sucesso!';
END $$;

-- ================================================================
-- üéâ LIMPEZA CONCLU√çDA
-- ================================================================

RAISE NOTICE 'üéâ LIMPEZA DO BANCO CONCLU√çDA COM SUCESSO!';
RAISE NOTICE '';
RAISE NOTICE 'üìã PR√ìXIMOS PASSOS:';
RAISE NOTICE '   1. ‚úÖ Verificar funcionamento da aplica√ß√£o';
RAISE NOTICE '   2. ‚úÖ Monitorar logs por 24-48h';
RAISE NOTICE '   3. ‚úÖ Executar backup p√≥s-limpeza';
RAISE NOTICE '   4. ‚úÖ Documentar altera√ß√µes realizadas';
RAISE NOTICE '';
RAISE NOTICE '‚ö†Ô∏è  Se houver problemas, restaurar do backup realizado antes desta limpeza.';

-- ================================================================
-- FIM DO SCRIPT
-- ================================================================